// This file is auto-generated by @hey-api/openapi-ts

import { browser } from '$app/environment';
import type { AssistantConfig } from '$lib/stores/assistant-configs.svelte';
import {
	type Config,
	createClient,
	createConfig,
	type ClientOptions as DefaultClientOptions,
} from './client';
import type { ClientOptions } from './types.gen';

/**
 * The `createClientConfig()` function will be called on client initialization
 * and the returned object will become the client's initial configuration.
 *
 * You may want to initialize your client this way instead of calling
 * `setConfig()`. This is useful for example if you're using Next.js
 * to ensure your client always has the correct values.
 */
export type CreateClientConfig<T extends DefaultClientOptions = ClientOptions> =
	(
		override?: Config<DefaultClientOptions & T>,
	) => Config<Required<DefaultClientOptions> & T>;

export const client = createClient(
	createConfig<ClientOptions>({
		baseUrl: browser ? '/api' : 'http://localhost:4096',
	}),
);

/**
 * Create an API client configured for a specific assistant
 */
export function createAssistantClient(assistant: Pick<AssistantConfig, 'url'>) {
	// Create a new client with assistant-specific configuration
	// TODO: Implement password authentication when OpenCode supports it
	return createClient(
		createConfig<ClientOptions>({
			baseUrl: assistant.url,
			// Authentication will be handled at OpenCode level
			// For now, no auth headers are sent
		}),
	);
}
